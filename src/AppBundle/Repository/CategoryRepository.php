<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Category3;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository {
    /**
     * @return array
     */
    public function getRoot() {
        return $this->createQueryBuilder( 'category' )
                    ->where( 'category.isActive = :status' )
                    ->andWhere( 'category.parent_category IS NULL' )
                    ->orderBy( 'category.id', 'DESC' )
                    ->setParameter( 'status', true )
                    ->getQuery()
                    ->getResult();
    }

    /**
     * Get catalog tree.
     *
     * @return array
     */
    public function getCatalogMenu() {
        $categories   = [ ];
        $dbCategories = $this->findBy( [ 'isActive' => true ], [ 'createdAt' => 'DESC' ] );
        if ( $dbCategories ) {
            foreach ( $dbCategories as $category ) {
                /** @var Category3 $category */
                $inner = [
                    'id'    => $category->getId(),
                    'title' => $category->getTitle(),
                    'url'   => $category->getSlug(),
                ];

                if ( $category->getParentCategory() && $category->getParentCategory()->getId() ) {
                    if ( ! array_key_exists( $category->getParentCategory()->getId(), $categories ) ) {
                        $categories[ $category->getParentCategory()->getId() ]['children'] = [ ];
                    }
                    $categories[ $category->getParentCategory()->getId() ]['children'][ $category->getId() ] = $inner;
                } else {
                    $categories[ $category->getId() ] = $inner;
                }
            }
        }

        return $categories;

    }
}
